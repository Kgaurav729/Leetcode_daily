You are given a positive integer array skill of even length n where skill[i] denotes the skill of the ith player. Divide the players into n / 2 teams of size 2 such that the total skill of each team is equal.

The chemistry of a team is equal to the product of the skills of the players on that team.

Return the sum of the chemistry of all the teams, or return -1 if there is no way to divide the players into teams such that the total skill of each team is equal.

 

Example 1:

Input: skill = [3,2,5,1,3,4]
Output: 22
Explanation: 
Divide the players into the following teams: (1, 5), (2, 4), (3, 3), where each team has a total skill of 6.
The sum of the chemistry of all the teams is: 1 * 5 + 2 * 4 + 3 * 3 = 5 + 8 + 9 = 22.
Example 2:

Input: skill = [3,4]
Output: 12
Explanation: 
The two players form a team with a total skill of 7.
The chemistry of the team is 3 * 4 = 12.
Example 3:

Input: skill = [1,1,2,3]
Output: -1
Explanation: 
There is no way to divide the players into teams such that the total skill of each team is equal.
 

Constraints:

2 <= skill.length <= 105
skill.length is even.
1 <= skill[i] <= 1000



class Solution:
    def dividePlayers(self, skill: List[int]) -> int:

        # 1st approach 
        n=len(skill)
        skill.sort()
        tempsum=skill[0]+skill[n-1]
        i=0
        ans=0
        while i<n/2:
            sum=skill[i]+skill[n-1-i]
            ans=ans+(skill[i]*skill[n-1-i])
            if sum!=tempsum:
                return -1
            i=i+1
        return ans

        #2nd approach 

        # dict={}
        # sum=0
        # for ele in skill:
        #     dict[ele]=dict.get(ele, 0) + 1
        #     sum=sum+ele
        # if sum%(len(skill)/2)!=0:
        #     return -1
        # target=sum/(len(skill)/2)

        # ans=0
        # for ele in skill:
        #     if(dict[ele]==0):
        #         continue
        #     dict[ele]-=1
        #     partner=target-ele
        #     if partner not in dict or dict[partner]==0:
        #         return -1

        #     ans+=ele*partner
        #     dict[partner]-=1
        
        # return int(ans)
